import{M as w,D as b}from"./ModalBase-Y6DUXDMM.js";import{_ as A,h as _,w as m,e as a,f as p,r as l,b as t,g as I,o as M,I as v,t as D,c as B,F as E}from"./index-D07aeNVm.js";import{M as y,F as O,c as k,a as f}from"./MyButton-3jhhrg8r.js";import{h as C}from"./http-BRi0bKhC.js";const S=o=>C.authApi().post("/admin",o),x={name:"FormAdminModal",components:{ModalBase:w,FormInput:O,MyButton:y},props:{show:{type:Boolean,default:!1},dataForm:{type:Object}},emits:["onClose","onSave"],data(){return{form:{permission_id:0},errors:{},loading:!1}},watch:{dataForm(){this.form={...this.dataForm}}},methods:{validate(){k({name:f().required("Nome é obrigatório"),email:f().email("E-mail inválido").required("E-mail é obrigatório"),password:this.form.id?f().min(6,"Senha deve ter pelo menos 6 caracteres"):f().min(6,"Senha deve ter pelo menos 6 caracteres").required("Senha é obrigatória")}).validate(this.form,{abortEarly:!1}).then(()=>{this.errors={},this.saveAdmin()}).catch(e=>{const d={};e.inner.forEach(c=>{d[c.path]=c.message}),this.errors=d})},async saveAdmin(){this.loading=!0;try{console.log("this.form",this.form);const{data:o}=await S(this.form);console.log("saveAdmin",o),this.$snotify.success("Administrador salvo com sucesso!")}catch(o){this.$snotify.error("Erro ao salvar o administrador: "+o)}finally{this.loading=!1}},closeModal(){this.form={},this.errors={},this.$emit("onClose")}}};function V(o,e,d,c,n,s){const i=l("FormInput"),u=l("MyButton"),h=l("ModalBase");return M(),_(h,{open:d.show,loading:n.loading,title:"Novo Administrador",onOnClose:s.closeModal},{content:m(()=>[t("form",{onSubmit:e[3]||(e[3]=I(r=>s.validate(s.saveAdmin),["prevent"]))},[a(i,{label:"Nome",type:"text",placeholder:"Digite o nome",modelValue:n.form.name,"onUpdate:modelValue":e[0]||(e[0]=r=>n.form.name=r),error:n.errors.name,required:""},null,8,["modelValue","error"]),a(i,{label:"E-mail",type:"email",placeholder:"Digite o e-mail",modelValue:n.form.email,"onUpdate:modelValue":e[1]||(e[1]=r=>n.form.email=r),error:n.errors.email,required:""},null,8,["modelValue","error"]),a(i,{label:"Senha",type:"password",placeholder:"Digite a senha",modelValue:n.form.password,"onUpdate:modelValue":e[2]||(e[2]=r=>n.form.password=r),error:n.errors.password,required:""},null,8,["modelValue","error"])],32)]),actions:m(()=>[a(u,{class:"btn success",loading:n.loading,onClick:e[4]||(e[4]=r=>s.validate(s.saveAdmin))},{default:m(()=>e[5]||(e[5]=[p(" Salvar ")])),_:1},8,["loading"])]),_:1},8,["open","loading","onOnClose"])}const N=A(x,[["render",V],["__scopeId","data-v-78108c19"]]),q={name:"DeleteAdminModal",components:{ModalBase:w,Icon:v,MyButton:y},props:{show:{type:Boolean,default:!1},dataForm:{type:Object}},emits:["onClose","onConfirm"],data(){return{loading:!1}},methods:{async deleteAdmin(){this.loading=!0;try{await new Promise(o=>setTimeout(o,1e3)),this.$emit("onConfirm"),this.$snotify.success("Administrador excluído com sucesso!")}catch(o){this.$snotify.error("Erro ao excluir o administrador: "+o)}finally{this.loading=!1}}}};function T(o,e,d,c,n,s){const i=l("Icon"),u=l("MyButton"),h=l("ModalBase");return M(),_(h,{open:d.show,loading:n.loading,title:"Confirmar Exclusão",onOnClose:e[0]||(e[0]=r=>o.$emit("onClose"))},{content:m(()=>[t("section",null,[a(i,{icon:"carbon:warning"}),t("div",null,[t("p",null,[e[1]||(e[1]=p(" Tem certeza que deseja excluir o administrador ")),t("span",null,D(d.dataForm?.name),1),e[2]||(e[2]=p(" ? "))]),e[3]||(e[3]=t("p",null,"Essa ação não pode ser desfeita!",-1))])])]),actions:m(()=>[a(u,{class:"btn danger",loading:n.loading,onClick:s.deleteAdmin},{default:m(()=>e[4]||(e[4]=[p("Confirmar")])),_:1},8,["loading","onClick"])]),_:1},8,["open","loading"])}const j=A(q,[["render",T],["__scopeId","data-v-f4480e3d"]]),U=o=>C.authApi().get("/user",o),z={name:"AdminController",components:{DataTable:b,Icon:v,FormAdminModal:N,DeleteAdminModal:j},data(){return{showFormAdminModal:!1,showDeleteAdminModal:!1,loading:!1,columns:[{title:"Nome",key:"name"},{title:"Email",key:"email"},{title:"Criado",key:"created"}],items:[],editItem:{}}},mounted(){this.getAdmins()},methods:{async getAdmins(){this.closeAllModals(),this.loading=!0;try{const o=await U("");console.log("response",o)}catch(o){this.$snotify.error("Erro ao buscar os administradores: "+o)}finally{this.loading=!1}},handleSearch(o){console.log(o)},handleNewAdmin(){this.editItem={},this.showFormAdminModal=!0},handleEditAdmin(o){this.editItem=o,this.showFormAdminModal=!0},handleConfirmDelete(o){this.editItem=o,this.showDeleteAdminModal=!0},closeAllModals(){this.editItem={},this.showFormAdminModal=!1,this.showDeleteAdminModal=!1}}},P={class:"card"},G=["onClick"],H=["onClick"];function J(o,e,d,c,n,s){const i=l("Icon"),u=l("DataTable"),h=l("FormAdminModal"),r=l("DeleteAdminModal");return M(),B(E,null,[t("main",null,[t("section",P,[t("header",null,[e[1]||(e[1]=t("h1",null,"Administradores",-1)),t("button",{class:"rounded",onClick:e[0]||(e[0]=g=>n.showFormAdminModal=!0)},[a(i,{icon:"tdesign:user-add"})])]),a(u,{items:n.items,columns:n.columns,loading:n.loading,total:1,onOnSearch:s.handleSearch},{actions:m(({item:g})=>[t("button",{class:"rounded success",onClick:F=>s.handleEditAdmin(g)},[a(i,{icon:"carbon:edit"})],8,G),t("button",{class:"rounded danger",onClick:F=>s.handleConfirmDelete(g)},[a(i,{icon:"carbon:trash-can"})],8,H)]),_:1},8,["items","columns","loading","onOnSearch"])])]),a(h,{show:n.showFormAdminModal,dataForm:n.editItem,onOnClose:s.closeAllModals,onOnSave:s.getAdmins},null,8,["show","dataForm","onOnClose","onOnSave"]),a(r,{show:n.showDeleteAdminModal,dataForm:n.editItem,onOnClose:s.closeAllModals,onOnConfirm:s.getAdmins},null,8,["show","dataForm","onOnClose","onOnConfirm"])],64)}const W=A(z,[["render",J],["__scopeId","data-v-699361d1"]]);export{W as default};
